@model MvcMovie.Models.MovieGenreViewModel

@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
}
@if (SignInManager.IsSignedIn(User))
{
    <h1>Movie catalog</h1>

    <p>
        <a asp-action="Create">Create New</a>
    </p>

    <form asp-controller="Movies" asp-action="Index" method="get">
        <p>
            <select asp-for="MovieGenre" asp-items="Model.Genres">
                <option value="">All</option>
            </select>

            Title: <input type="text" asp-for="SearchString" />
            <input type="submit" value="Filter" />
        </p>
    </form>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Movies![0].Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Movies![0].ReleaseDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Movies![0].Genre)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Movies![0].Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Movies![0].Rating)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (Movie? item in Model.Movies!)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReleaseDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Genre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rating)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p style="color: orangered; font-size: 3em; margin-top: 5em" class="text-center">You are not authenticated. Please <a style="text-decoration: none; color:#0d6efd" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a> or click on <a style="text-decoration: none;  color:#0d6efd" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a> to create a new account.</p>
}